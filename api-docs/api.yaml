swagger: "2.0"

info:
  title: Cluster API
  version: 1.0

schemes: ["http", "https"]

paths:
  # Create a task
  /api/v1/tasks:
    post:
      summary: Create a task
      description: Add a new task
      parameters:
        - name: name
          in: formData
          required: true
        - name: completed
          in: formData
      responses:
        201:
          description: Created successfully
        400:
          description: Bad request
        401:
          description: User doesn't exist

  # Get all task
    get:
      summary: Get all task
      description: Returns all task
      responses:
        200:
          description: Successful operation
        400:
          description: Bad request
        401:
          description: Post doesn't exist

  # Get a task by id
  /api/v1/tasks/{id}:
    get:
      summary: Get a single task
      description: Get a task by id
      parameters:
        - name: id
          in: path
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Bad request
        500:
          description: Internal server error

    put:
      summary: Update a single task
      description: Update a task by id
      parameters:
        - name: id
          in: path
          required: true
        - name: task
          in: body
          required: true
          schema:
            $ref: '#/components/schemas/Task'
      responses:
        200:
          description: Successful operation
        400:
          description: Bad request
        500:
          description: Internal server error

    delete:
      summary: Delete a task by id
      description: Delete a task
      parameters:
        - name: id
          in: path
          required: true
      responses:
        200:
          description: Successful operation
        204:
          description: Everything is good, nothing to return
        400:
          description: Bad request
        401:
          description: Post doesn't exist



components:
  schemas:
    # Task schema
    Task:
      type: object
      example:
        {
          "name": "task name",
          "completed": "false",
        }
      properties:
        name:
          type: string
        completed:
          type: boolean
